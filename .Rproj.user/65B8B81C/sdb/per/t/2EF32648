{
    "collab_server" : "",
    "contents" : "EditorMultBiplotRGUI <- function(X, ppi=12, GraphWindow=FALSE, Toolkit = \"RGtk2\", ...) {\n  options(guiToolkit = Toolkit)\n\n  n = dim(X)[1]\n  p = dim(X)[2]\n\n  ChangeTable <- function(...){\n    rownames(TableInd)=rownames(Table)\n    rownames(TableVar)=names(Table)\n  }\n\n  ChangeIndInfo <- function(...){\n    rownames(Table)<-rownames(TableInd)\n  }\n\n  ChangeVarInfo <- function(...){\n      names(Table) <- rownames(TableVar)\n  }\n\n  window <- gwindow(\"MultBiplotR Data Manager\")\n  notebook <- gnotebook(container = window)\n  size(notebook) <- c(700, 600)\n\n  # Group for the original data\n  DataFrame <- ggroup(container = notebook, label = gettext(\"Data\"), horizontal = FALSE)\n  Table <- gdf(X, container = DataFrame, expand = TRUE, do.subset=TRUE)\n  addHandlerChanged(Table, handler=ChangeTable)\n\n  IndFrame <- ggroup(container = notebook, label = gettext(\"Individuals\"), horizontal = FALSE)\n  Color=rep(\"blue\", n)\n  RowInfo=as.data.frame(Color)\n  RowInfo$Symbol=rep(1,n)\n  rownames(RowInfo)=rownames(X)\n  TableInd <- gdf(RowInfo, container = IndFrame, expand = TRUE)\n  addHandlerChanged(TableInd, handler=ChangeIndInfo)\n\n\n  VarFrame <- ggroup(container = notebook, label = gettext(\"Variables\"), horizontal = FALSE)\n  Classes=sapply(X,class)\n  ColInfo=as.data.frame(Classes)\n  ColInfo$Color=rep(\"black\", p)\n  ColInfo$Symbol=rep(0,p)\n  TableVar <- gdf(ColInfo, container = VarFrame, expand = TRUE)\n  addHandlerChanged(TableVar, handler=ChangeVarInfo)\n\n  if (GraphWindow){\n  GraphTab = ggroup(container = notebook, label = gettext(\"Plot\"), horizontal = FALSE)\n  Grafico<-ggraphics(ps=ppi,container=GraphTab)\n  addHandlerClicked ( Grafico , handler = function ( h , ... ) {\n    cat ( sprintf ( \"You clicked %.2f x %.2f\\n\" , h$x , h$y ) )\n  } )}\n\n\n  aOpen <-  gaction(label=\"Open\",   icon=\"open\",  handler=NULL)\n  aTabDel <-  gaction(label=\"Tab Delimited\",   icon=\"open\",  handler=NULL)\n  aSPSS <-  gaction(label=\"SPSS\",   icon=\"open\",  handler=NULL)\n  aClose <- gaction(label=\"Close\",  icon=\"close\", handler=NULL)\n\n  aSaveGraph <- gaction(label=\"Save Grapg\",  icon=\"save\", handler=function(h,...){\n    setfilename <- paste(gfile(text=\"Graph.pdf\", type=\"save\"), \".pdf\", sep=\"\")\n    svalue(Grafico, setfilename)\n  }\n    )\n\n\n  aQuit  <- gaction(label=\"Quit\",   icon=\"quit\",  handler=function(h,...) dispose(window))\n  aCut <-   gaction(label=\"Cut\",    icon=\"cut\",   handler=NULL)\n  aCopy <-  gaction(label=\"Copy\",   icon=\"copy\",  handler=NULL)\n  aPaste <- gaction(label=\"Paste\",  icon=\"paste\", handler=NULL)\n  aAdd <- gaction(label=\"Add\", handler=NULL)\n\n  aColors <- gaction(label=\"List of Colors\", handler=function(...){\n    Colores=colors()\n    text=capture.output(print(Colores))\n    GeneralResults(title=\"List of Colors\", text=text)\n  })\n\n  aSummary <- gaction(label=\"Quick Summary\", handler=function(...){\n    X=Table[,]\n    text=capture.output(summary(X))\n    GeneralResults(title=\"Summary of Data\", text=text)\n  })\n\n\n  aExplore <- gaction(label=\"Univariate Exploration\", handler=function(...){\n    X=Table[,]\n    UnivariateGUI(X, Tab=4)\n  })\n\n  aCompare <- gaction(label=\"Means Comparison\", handler=function(...){\n    X=Table[,]\n    UnivariateGUI(X, Tab=5)\n  })\n\n\n  aMultPlot<- gaction(label=\"Matrix Plot\", handler=function(...){\n    X=Table[,]\n    Classes=sapply(X,class)\n    Numeric=which(Classes==\"numeric\")\n    panel.hist <- function(x, ...){\n      usr <- par(\"usr\"); on.exit(par(usr))\n      par(usr = c(usr[1:2], 0, 1.5) )\n      h <- hist(x, plot = FALSE)\n      breaks <- h$breaks; nB <- length(breaks)\n      y <- h$counts; y <- y/max(y)\n      rect(breaks[-nB], 0, breaks[-1], y, col = \"cyan\", ...)}\n\n    panel.cor <- function(x, y, digits = 2, prefix = \"\", cex.cor, ...){\n      usr <- par(\"usr\"); on.exit(par(usr))\n      par(usr = c(0, 1, 0, 1))\n      r <- abs(cor(x, y))\n      txt <- format(c(r, 0.123456789), digits = digits)[1]\n      txt <- paste0(prefix, txt)\n      if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)\n      text(0.5, 0.5, txt, cex = cex.cor * r)}\n\n    pairs(X[,Numeric], diag.panel = panel.hist, main=\"Simple Scatterplot Matrix\", upper.panel = panel.cor)\n  })\n\n  aManova <- gaction(label=\"MANOVA\", handler=function(...){\n    X=Table[,]\n    CanonicalBiplotGUI(X)\n  })\n\n  aIRTBin <- gaction(label=\"IRT - Binary Data\", handler=function(...){\n\n  })\n\n  aIRTOrd <- gaction(label=\"IRT - Ordinal Data\", handler=function(...){\n\n  })\n\n  aClassical <- gaction(label=\"Classical Biplot - PCA\", key.accel = \"B\", handler=function(...){\n    X=Table[,]\n    PCA.BiplotGUI(X)\n  })\n\n  aHJBiplot <- gaction(label=\"Classical Biplot - PCA\", key.accel = \"H\", handler=function(...){\n    X=Table[,]\n    PCA.BiplotGUI(X)\n  })\n\n  aLogisticBin <- gaction(label=\"Logistic Biplot - Binary Data\", handler=function(...){\n\n  })\n\n  aLogisticNom <- gaction(label=\"Logistic Biplot - Nominal Data\", handler=function(...){\n\n  })\n\n  aLogisticOrd <- gaction(label=\"Logistic Biplot - Ordinal Data\", handler=function(...){\n\n  })\n\n  aLogisticMixed <- gaction(label=\"Logistic Biplot - Mixed Data\", handler=function(...){\n\n  })\n\n\n  aFactorBiplot <- gaction(label=\"Factor Analysis Biplot\", key.accel = \"F\", handler=function(...){\n\n  })\n\n  aSimpleCorrespondences <- gaction(label=\"Simple Corresponedences (Frequencies/Abundances)\", handler=function(...){\n\n  })\n\n  aMultipleCorrespondences <- gaction(label=\"Multiple Corresponedences\", handler=function(...){\n\n  })\n\n  aCanonical <- gaction(label=\"One-Way Canonical/MANOVA Biplot\", handler=function(...){\n    X=Table[,]\n    CanonicalBiplotGUI(X)\n  })\n\n  aCanonical2 <- gaction(label=\"Two-Way Canonical/MANOVA Biplot\", handler=function(...){\n\n  })\n\n  aCanonicalGeneral <- gaction(label=\"General Canonical/MANOVA Biplot\", handler=function(...){\n\n  })\n\n  aPrincipalBin <- gaction(label=\"PCoA - Binary Data\", handler=function(...){\n\n  })\n\n  aPrincipalNom <- gaction(label=\"PCoA - Nominal Data\", handler=function(...){\n\n  })\n\n  aPrincipalOrd <- gaction(label=\"PCoA - Ordinal Data\", handler=function(...){\n\n  })\n\n  aPrincipalCon <- gaction(label=\"PCoA - Continuous Data\", handler=function(...){\n\n  })\n\n  aPrincipalMixed <- gaction(label=\"PCoA - Mixed Data\", handler=function(...){\n\n  })\n\n  aMDSBin <- gaction(label=\"MDS - Binary Data\", handler=function(...){\n\n  })\n\n  aMDSNom <- gaction(label=\"MDS - Nominal Data\", handler=function(...){\n\n  })\n\n  aMDSOrd <- gaction(label=\"MDS - Ordinal Data\", handler=function(...){\n\n  })\n\n  aMDSCon <- gaction(label=\"MDS - Continuous Data\", handler=function(...){\n\n  })\n\n  aMDSMixed <- gaction(label=\"MDS - Mixed Data\", handler=function(...){\n\n  })\n\n  aUnfolSMACOF <- gaction(label=\"Unfolding - SMACOF\", handler=function(...){\n\n  })\n\n  aGenefold <- gaction(label=\"Unfolding - Genefold\", handler=function(...){\n\n  })\n\n  aRedunContCont <- gaction(label=\"Continuous/Continuous\", handler=function(...){\n\n  })\n\n  aRedunBinCont <- gaction(label=\"Binary/Continuous\", handler=function(...){\n\n  })\n\n  aCCA <- gaction(label=\"Canonical Corespondence Analysis\", handler=function(...){\n\n  })\n\n  aCoinertia <- gaction(label=\"Coinertia\", handler=function(...){\n\n  })\n\n  aCanonCorr <- gaction(label=\"Canonical Correlation Analysis\", handler=function(...){\n\n  })\n\n  aPLSContCont <- gaction(label=\"Continuous/Continuous\", handler=function(...){\n\n  })\n\n  aPLSBinCont <- gaction(label=\"Binary/Continuous\", handler=function(...){\n\n  })\n\n  aSTATIS <- gaction(label=\"STATIS-ACT (with Biplot)\", handler=function(...){\n\n  })\n\n\n\n  ml <- list(File = list(\n    open = aOpen,\n    Import=list(\n      tabdel=aTabDel,\n      spss=aSPSS\n    ),\n    close = aClose,\n    Savegr= aSaveGraph,\n    sep = list(separator = TRUE), # must be named component\n    quit = aQuit),\n    Edit = list(\n      copy = aCopy,\n      paste = aPaste),\n    Data=list(Add=aAdd,\n              Colors=aColors ),\n    Univariate=list(Summary=aSummary,\n                    Explore=aExplore,\n                    Compare=aCompare),\n    Multivariate=list(MultPlot=aMultPlot,\n                      Manova=aManova,\n                      Item_Response_IRT=list(Binary=aIRTBin,\n                                             Ordinal=aIRTOrd)\n                      ),\n    Biplot=list(Classical=aClassical,\n                Factor=aFactorBiplot,\n                Logistic_Biplot=list(Binary=aLogisticBin,\n                                                  Nominal=aLogisticNom,\n                                                  Ordinal=aLogisticOrd,\n                                                  Mixed=aLogisticMixed),\n                Correspondences=list(Simple=aSimpleCorrespondences,\n                                     Multiple=aMultipleCorrespondences),\n                Canonical_Biplot = list(OneWay=aCanonical,\n                                        TwoWay=aCanonical2,\n                                        General=aCanonicalGeneral),\n                Principal_Coordinates_Biplot=list(Binary=aPrincipalBin,\n                                          Nominal=aPrincipalNom,\n                                          Ordinal=aPrincipalOrd,\n                                          Continuous=aPrincipalCon,\n                                          Mixed=aPrincipalMixed),\n                MDS_Biplot=list(Binary=aMDSBin,\n                                Nominal=aMDSNom,\n                                Ordinal=aMDSOrd,\n                                Continuous=aMDSCon,\n                                Mixed=aMDSMixed),\n                Unfolding=list(SMACOF=aUnfolSMACOF,\n                               Genefold=aGenefold),\n                Two_Table_Ordination=list(Redundancy_Analysis=list(Cont_Cont=aRedunContCont,\n                                                                   Bin_Cont=aRedunBinCont),\n                                          CCA=aCCA,\n                                          Coinertia=aCoinertia,\n                                          CanonCorr=aCanonCorr\n                                            ),\n                PLS_Biplot=list(Cont_Cont=aPLSContCont,\n                                Bin_Cont=aPLSBinCont),\n                Multitable=list(STATIS=aSTATIS)\n    )\n  )\n\n  mismenus=gmenu(ml, container = window)\n\n  svalue(notebook) <- 1\n}\n",
    "created" : 1481530371109.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2557585486",
    "id" : "2EF32648",
    "lastKnownWriteTime" : 1481535234,
    "last_content_update" : 1481535234637,
    "path" : "~/Dropbox/0 ProgramasR/Paquetes/MultBiplotRGUI/R/EditorMultBiplotRGUI.R",
    "project_path" : "R/EditorMultBiplotRGUI.R",
    "properties" : {
    },
    "relative_order" : 16,
    "source_on_save" : true,
    "source_window" : "",
    "type" : "r_source"
}