{
    "collab_server" : "",
    "contents" : "PCA.BiplotGUI <- function(X, Toolkit = \"RGtk2\", ...) {\n  require(gWidgets)\n  options(guiToolkit = Toolkit)\n\n  DoBiplot <- function(...) {\n    XX= X2[svalue(RS, index=TRUE),svalue(CS, index=TRUE)]\n\n    if (sum(svalue(RS1, index=TRUE))>0)\n      sr=as.matrix(X2[svalue(RS1, index=TRUE),svalue(CS, index=TRUE)])\n    else\n      sr=NULL\n\n    if (sum(svalue(CS2, index=TRUE))>0)\n      cs = as.matrix(X2[svalue(RS, index=TRUE),svalue(CS2, index=TRUE)])\n    else\n      cs=NULL\n\n    alpha=svalue(Alpha)\n    dims= svalue(Dimens)\n    sc=svalue(prevtsc, index=TRUE)\n\n    if (sc==11){\n      Classes=sapply(X,class)\n      Factors=which(Classes==\"factor\")\n      X4=as.data.frame(X[svalue(RS, index=TRUE), Factors])\n      grouping=X4[,svalue(FacSel, index=TRUE)]\n    }\n    else\n      grouping=NULL\n\n    bip=PCA.Biplot(XX, alpha = alpha, dimension = dims, Scaling = sc, sup.rows = sr, sup.cols = cs, grouping=grouping)\n\n    # Selection of External Variables\n    bip$Factors=X4\n\n    if (svalue(GraphWin, index=TRUE)==1)\n      GrWin= FALSE\n    else\n      GrWin= TRUE\n\n    PlotBiplotGUI(bip, GraphWindow=GrWin)\n  }\n\n  window <- gwindow(\"Classical Biplot (PCA)\")\n  notebook <- gnotebook(cont = window)\n  size(notebook) <- c(500, 600)\n\n  # ----------------- Data -------------------------------------\n  DataFrame <- ggroup(cont = notebook, label = gettext(\"Data\"), horizontal = FALSE)\n  Classes=sapply(X,class)\n  Numeric=which(Classes==\"numeric\")\n  X2=X[,Numeric]\n  Table <- gdf(X2, container = DataFrame, expand = TRUE)\n\n  # ----------------- External Data -------------------------------------\n  NoNumeric=which(Classes!=\"numeric\")\n  if (length(NoNumeric)>0){\n    SupDataFrame <- ggroup(cont = notebook, label = gettext(\"External\"), horizontal = FALSE)\n    X3=as.data.frame(X[,NoNumeric])\n    colnames(X3) <-colnames(X)[NoNumeric]\n    Table <- gdf(X3, container = SupDataFrame, expand = TRUE)\n  }\n\n\n  # ----------------- Data Transformation ----------------------------\n  Disp <- ggroup(cont = notebook, label = gettext(\"Transformation\"), horizontal = FALSE)\n  PrevFrame = gframe(text = \"Previous Transformation\", markup = FALSE, horizontal = TRUE, container = Disp)\n  types = c(\"Log\", \"Logit\", \"None\")\n  prevtr <- gcombobox(types, editable = FALSE, container = PrevFrame)\n  svalue(prevtr, index = TRUE) <- 3\n\n  Classes=sapply(X,class)\n  Factors=which(Classes==\"factor\")\n\n  SelFac <-function(...){\n    if (svalue(prevtsc, index=TRUE)==11){\n      if (length(Factors)==0){\n        gmessage(\"You need at least one factor to use Within groups standardization \")\n        svalue(prevtsc, index = TRUE) <- 5\n        stop(\"You need at least one factor to use Within groups standardization \")\n\n      }\n    }\n  }\n\n\n  SacalingFrame = gframe(text = \"Previous Scaling\", markup = FALSE, horizontal = TRUE, container = Disp)\n  ContinuousDataTransform = c(\"Raw Data\", \"Substract the global mean\", \"Double centering\", \"Column centering\",\n                              \"Standardize columns\", \"Row centering\", \"Standardize rows\", \"Divide by the column means and center\", \"Normalized residuals from independence\",\n                              \"Divide by the range\", \"Within groups standardization\", \"Ranks\")\n  prevtsc <- gcombobox(ContinuousDataTransform, editable = FALSE, container = SacalingFrame, handler=SelFac)\n  svalue(prevtsc, index = TRUE) <- 5\n\n\n  if (length(Factors)>0){\n    X4=as.data.frame(X[, Factors])\n    colnames(X4) <- colnames(X)[Factors]\n    FactorsFrame = gframe(text = \"Factors\", markup = FALSE, horizontal = TRUE, container = Disp)\n    FacSel <- gcheckboxgroup(colnames(X4), container = FactorsFrame, use.table = TRUE)\n    size(FacSel) <- c(400, 100)\n    Selection <- rep(FALSE, length(Factors))\n    Selection[1] <- TRUE\n    svalue(FacSel) = Selection\n  }\n\n\n  # -----------------  Biplot definition ----------------------------\n  BiplotDef <- ggroup(cont = notebook, label = gettext(\"Biplot Definition\"), horizontal = FALSE)\n  EstimFrame = gframe(text = \"Estimation Method\", markup = FALSE, horizontal = TRUE, container = BiplotDef)\n  estypes = c(\"Singular Value Decomposition\", \"Alternated Regressions\", \"Robust Alternated Regressions\", \"Eigenvectors of the Covariance Matrix\")\n  estim <- gcombobox(estypes, editable = FALSE, container = EstimFrame)\n  svalue(estim, index = TRUE) <- 1\n\n  TypeBiplotFrame = gframe(text = \"Biplot Type\", markup = FALSE, horizontal = TRUE, container = BiplotDef)\n  TypeBi = glayout(container = TypeBiplotFrame)\n  size(TypeBi) <- c(400, 50)\n  TypeBi[1, 1] <- \"GH - CMP \"\n  TypeBi[1, 2] <- (Alpha <- gslider(from = 0.0, to = 1, by = 0.05, value = 1, container = TypeBi))\n  size(Alpha) <- c(200, 30)\n  TypeBi[1, 3] <- \"JK - RMP\"\n\n  DimensionFrame = gframe(text = \"Dimension of the solution\", markup = FALSE, horizontal = TRUE, container = BiplotDef)\n  Dimens <- gspinbutton(from = 2, to = 50, by = 1, value = 3, container = DimensionFrame)\n  size(Dimens) <- c(100, 20)\n\n\n\n  # ---------------- Controls the active elements for the construction of the biplot --------------\n  ActiveRows <- function(...){\n    Selected=rep(FALSE, dim(X)[1])\n    Selected[svalue(RS1, index=TRUE)]=TRUE\n    Selected[svalue(RS, index=TRUE)]=FALSE\n    svalue(RS1)=Selected\n  }\n\n  ActiveCols <- function(...){\n    Selected=rep(FALSE, dim(X2)[2])\n    Selected[svalue(CS2, index=TRUE)]=TRUE\n    Selected[svalue(CS, index=TRUE)]=FALSE\n    svalue(CS2)=Selected\n  }\n\n\n  SupRows <- function(...){\n    Selected=rep(FALSE, dim(X)[1])\n    Selected[svalue(RS, index=TRUE)]=TRUE\n    Selected[svalue(RS1, index=TRUE)]=FALSE\n    svalue(RS)=Selected\n  }\n\n  SupCols <- function(...){\n    Selected=rep(FALSE, dim(X2)[2])\n    Selected[svalue(CS, index=TRUE)]=TRUE\n    Selected[svalue(CS2, index=TRUE)]=FALSE\n    svalue(CS)=Selected\n  }\n\n  ActiveFrame <- ggroup(cont = notebook, label = gettext(\"Active\"), horizontal = TRUE)\n  TS = glayout(container = ActiveFrame)\n  TS[1, 1] <- \"Rows\"\n  TS[2, 1] <- (RS <- gcheckboxgroup(rownames(X), container = TS, use.table = TRUE, handler = ActiveRows))\n  size(RS) <- c(220, 400)\n  svalue(RS) = rep(TRUE, dim(X)[1])\n  TS[1, 2] <- \"Columns\"\n  TS[2, 2] <- (CS <- gcheckboxgroup(colnames(X2), container = TS, use.table = TRUE, handler = ActiveCols))\n  size(CS) <- c(220, 400)\n  svalue(CS) = rep(TRUE, dim(X2)[2])\n\n  # ---------------- Controls the supplementary elements for the construction of the biplot --------------\n  SuppFrame <- ggroup(cont = notebook, label = gettext(\"Supplementary\"), horizontal = TRUE)\n  TS1 = glayout(container = SuppFrame)\n  TS1[1, 1] <- \"Rows\"\n  TS1[3, 1] <- (RS1 <- gcheckboxgroup(rownames(X), container = TS1, use.table = TRUE, handler = SupRows))\n  size(RS1) <- c(220, 300)\n  svalue(RS1) = rep(FALSE, dim(X)[1])\n  TS1[1, 2] <- \"Columns\"\n  TS1[2, 2] <- \"Internal\"\n  TS1[3, 2] <- (CS2 <- gcheckboxgroup(colnames(X2), container = TS1, use.table = TRUE, handler = SupCols))\n  size(CS2) <- c(220, 300)\n  svalue(CS2) = rep(FALSE, dim(X2)[2])\n\n  if (length(NoNumeric)>0){\n    TS1[4, 2] <- \"External\"\n    TS1[5, 2] <- (CS1 <- gcheckboxgroup(colnames(X3), container = TS1, use.table = TRUE))\n    size(CS1) <- c(220, 180)\n    svalue(CS1) = rep(FALSE, dim(X3)[2])}\n\n  RunFrame <- ggroup(cont = notebook, label = gettext(\"Run\"), horizontal = FALSE)\n  GraphFr = gframe(text = \"Graph\", markup = FALSE, horizontal = TRUE, container = RunFrame)\n  grdat=c(\"Floating\", \"Embeded\")\n  GraphWin <- gradio(grdat, container=GraphFr)\n  RunFr = gframe(text = \"Run\", markup = FALSE, horizontal = TRUE, container = RunFrame)\n  RunButt <- gbutton(\"Run Biplot\", container = RunFr, handler = DoBiplot)\n  font(RunButt) <- list(family=\"times\",size=18, weight=\"bold\",style=\"italic\", color=\"red\")\n  size(RunButt) <- c(490, 50)\n\n\n  svalue(notebook) <- 1\n}\n\n",
    "created" : 1476428173708.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3171256118",
    "id" : "65DADAB1",
    "lastKnownWriteTime" : 1476386487,
    "last_content_update" : 1476386487,
    "path" : "~/Dropbox/0 ProgramasR/Paquetes/MultBiplotRGUI/R/PCA.BiplotGUI.R",
    "project_path" : "R/PCA.BiplotGUI.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}